#
# Author: Kang Lin<kl222@126.com>
# Date  : 2019-08-20
#

cmake_minimum_required(VERSION 2.8)

project(SeetaFaceTracker)

add_definitions(-DSEETA_EXPORTS)

file(GLOB_RECURSE ROOT_SRC_FILES
        ${CMAKE_CURRENT_SOURCE_DIR}/src/*.c
        ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cc
        ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp
        )

file(GLOB_RECURSE ROOT_SEETA_FILES
        ${CMAKE_CURRENT_SOURCE_DIR}/seeta/*.c
        ${CMAKE_CURRENT_SOURCE_DIR}/seeta/*.cc
        ${CMAKE_CURRENT_SOURCE_DIR}/seeta/*.cpp
        )

file(GLOB INCLUDE_FILES
        ${CMAKE_CURRENT_SOURCE_DIR}/include/seeta/*.h
        ${CMAKE_CURRENT_SOURCE_DIR}/include/seeta/*.hh
        ${CMAKE_CURRENT_SOURCE_DIR}/include/seeta/*.hpp
        )

list(APPEND SRC_FILES ${ROOT_SRC_FILES})
list(APPEND SRC_FILES ${ROOT_SEETA_FILES})

# add library
add_library(${PROJECT_NAME} ${SRC_FILES})
target_include_directories(${PROJECT_NAME} PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${PROJECT_SOURCE_DIR}/include
        ${PROJECT_SOURCE_DIR}/include/seeta
        ${PROJECT_SOURCE_DIR}/seeta
        )
target_include_directories(${PROJECT_NAME} PRIVATE
        ${CMAKE_SOURCE_DIR}/SeetaNet/include
        ${CMAKE_SOURCE_DIR}/FaceDetector/include
        )
#target_link_libraries(${PROJECT_NAME} PUBLIC SeetaNet)
target_link_libraries(${PROJECT_NAME} PUBLIC SeetaFaceDetector)
# Set flags
if(ANDROID)
    if(ANDROID_ARM_NEON)
        target_compile_definitions(${PROJECT_NAME} PRIVATE __ARM_NEON__)
        target_compile_options(${PROJECT_NAME} PUBLIC -mfpu=neon-vfpv4)
    endif()
    
    target_compile_options(${PROJECT_NAME} PUBLIC 
        -frtti -fexceptions -funsafe-math-optimizations -ftree-vectorize -ffast-math)
endif()

GENERATE_EXPORT_HEADER(${PROJECT_NAME}
        EXPORT_MACRO_NAME SEETA_FACE_TRACKER_API
        EXPORT_FILE_NAME  SeetaFaceTrackerExport.h
        )
file(COPY ${CMAKE_CURRENT_BINARY_DIR}/SeetaFaceTrackerExport.h
        DESTINATION ${CMAKE_BINARY_DIR})
install(
        FILES
        ${CMAKE_CURRENT_BINARY_DIR}/SeetaFaceTrackerExport.h
        DESTINATION
        ${CMAKE_INSTALL_INCLUDEDIR}/seeta
)
target_include_directories(${PROJECT_NAME} PRIVATE
        ${CMAKE_BINARY_DIR}
        )
  
set_target_properties(${PROJECT_NAME} PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib
    VERSION ${BUILD_VERSION}
    INSTALL_RPATH
        "$ORIGIN;$ORIGIN/../lib;$ORIGIN/../lib/${CMAKE_LIBRARY_ARCHITECTURE};lib;../lib;../lib/${CMAKE_LIBRARY_ARCHITECTURE}"
    )
if(WIN32)
    set_target_properties(${PROJECT_NAME} PROPERTIES
        LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
        )
else()
    set_target_properties(${PROJECT_NAME} PROPERTIES
        LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib
        )
endif()
# Be will to install header files
set_property(TARGET ${PROJECT_NAME} PROPERTY PUBLIC_HEADER ${INCLUDE_FILES})

if(WIN32)
    INSTALL(TARGETS ${PROJECT_NAME}
        EXPORT ${PROJECT_NAME}Config
        RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
        LIBRARY DESTINATION "${CMAKE_INSTALL_BINDIR}"
        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
        PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/seeta
        INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
        )
else()
    INSTALL(TARGETS ${PROJECT_NAME}
        EXPORT ${PROJECT_NAME}Config
        RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
        PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/seeta
        INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
        )
endif()
export(TARGETS ${PROJECT_NAME}
        APPEND FILE ${CMAKE_BINARY_DIR}/${PROJECT_NAME}Config.cmake
        )
# Install cmake configure files
install(EXPORT ${PROJECT_NAME}Config
        DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/SeetaFace2"
        NAMESPACE
        SeetaFace::
        )
write_basic_package_version_file(
        "${CMAKE_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
        VERSION ${BUILD_VERSION}
        COMPATIBILITY AnyNewerVersion)
install(FILES "${CMAKE_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake" DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/SeetaFace2")
# Install configure file
set(SeetaFace2_LIBS "${PROJECT_NAME} ${SeetaFace2_LIBS}" PARENT_SCOPE)
configure_file(FaceTracker.pc.in ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc @ONLY)
install(FILES ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc
    DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
